#!/bin/sh
set -e

YUMROOT=$1

### Local functions

_update_repo () {
  mkdir -p $YUMROOT/$DIST/packages
  cd $YUMROOT/$DIST/packages/
  mkdir -p .old .new
  ls | sed -e 's/\.el[0-9].*\.rpm$//' | sort -u | while read NAME
  do
    VER=`echo $NAME | egrep -o '\-[0-9].*$' | sed -e 's/^\-//'`; PKG=`echo $NAME | sed -e "s/\-$VER//"`; ls ${PKG}-[0-9]* | tail -1
  done | sed -e 's/\.el[0-9].*\.rpm$//' | sort -u | while read LATEST
  do
    mv $LATEST* .new
  done
  ls | grep el${DIST} | while read OLD
  do
    mv $OLD .old
  done
  cd .new
  ls | while read PKG
  do
    mv $PKG ../
  done

  for ARCH in i686 noarch x86_64 src
  do
    cd $YUMROOT/$DIST; ln -sf i386 i686; ln -sf SRPMS src
    cd $YUMROOT/$DIST/packages
    ls | grep $ARCH.rpm | while read PKG
    do
      ln -sf $YUMROOT/$DIST/packages/$PKG $YUMROOT/$DIST/$ARCH/.
    done
    cd $YUMROOT/$DIST/$ARCH
    ls | while read FILE; do if file -b $FILE | grep -q broken ; then rm $FILE; fi; done
  done
  [ -d "$YUMROOT/$DIST" ] && /usr/bin/find $YUMROOT/$DIST -maxdepth 1 -mindepth 1 -type d ! -name packages -exec createrepo --quiet --update {} \; 2>/dev/null
}


cd $YUMROOT; ls | while read FN; do [ "`stat --printf=%F $FN`" == "directory" ] && echo $FN; done | while read DIST
do
  [ -d $YUMROOT/$DIST ] || continue
  _update_repo
done

